name: Alarms - Destroy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Terraform workspace (예: dev, staging, prod)"
        required: false
        default: "dev"
      confirm:
        description: "정말 삭제하려면 EXACTLY 입력: DELETE"
        required: true
  workflow_call:                      
    inputs:
      environment:
        required: false
        type: string
        default: "dev"
      confirm:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

concurrency:
  group: alarms-destroy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  destroy:
    runs-on: ubuntu-latest
    steps:
      - name: Safety check
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "DELETE" ]; then
            echo "Type DELETE to proceed." >&2
            exit 1
          fi

      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform init (shared backend)
        working-directory: Endpoint_Infra
        run: terraform init -input=false -reconfigure -backend-config="${{ github.workspace }}/.github/terraform/backend.hcl"

      - name: Select workspace
        working-directory: Endpoint_Infra
        run: |
          terraform workspace select "${{ inputs.environment }}" || terraform workspace new "${{ inputs.environment }}"

      # for_each 모듈이라면 target=module.endpoint_alarms 로 전체 삭제 가능
      - name: Terraform destroy (alarms only)
        working-directory: Endpoint_Infra
        run: |
          set -Eeuo pipefail
          terraform destroy -auto-approve -no-color \
            -target=module.endpoint_alarms

